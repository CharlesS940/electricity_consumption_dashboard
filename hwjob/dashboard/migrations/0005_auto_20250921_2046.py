# Generated by Django 4.2.2 on 2025-09-21 20:46

from django.db import migrations
from django.db.models import F, Max, ExpressionWrapper, IntegerField


class Migration(migrations.Migration):
    dependencies = [
        ("dashboard", "0004_client_has_recent_anomaly"),
    ]

    def set_recent_anomaly(apps, schema_editor):
        Client = apps.get_model("dashboard", "Client")
        Consumption = apps.get_model("dashboard", "Consumption")

        # Compute period as year * 12 + month
        period = ExpressionWrapper(F('year') * 12 + F('month'), output_field=IntegerField())
        latest = Consumption.objects.aggregate(max_period=Max(period))['max_period']
        start = latest - 11  # last 12 months inclusive
        clients_to_update = []
        for client in Client.objects.all():
            has_recent_anomaly = Consumption.objects.annotate(ym_value=period).filter(
                client=client.pk,
                has_anomaly=True,
                ym_value__gte=start,
                ym_value__lte=latest,
            ).exists()
            client.has_recent_anomaly = has_recent_anomaly
            clients_to_update.append(client)

        Client.objects.bulk_update(clients_to_update, ['has_recent_anomaly'])

    operations = [
        migrations.RunPython(set_recent_anomaly, reverse_code=migrations.RunPython.noop),
    ]
