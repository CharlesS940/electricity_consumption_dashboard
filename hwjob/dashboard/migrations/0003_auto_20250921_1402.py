# Generated by Django 4.2.2 on 2025-09-21 14:02

from django.db import migrations
from dashboard.utils import has_electric_heating, find_anomalies

def fill_electric_heating_and_anomaly(apps, schema_editor):
    Client = apps.get_model('dashboard', 'Client')
    Consumption = apps.get_model('dashboard', 'Consumption')

    clients_to_update = []
    consumptions_to_update = []
    for client in Client.objects.all():

        # Get all consumptions for the client
        queryset = Consumption.objects.filter(client=client).order_by("-year", "-month")

        # Determine if the client has electric heating based on the last 12 months and prepare for bulk update
        client = has_electric_heating(client, list(reversed(queryset[:12])), threshold=2)
        clients_to_update.append(client)

        # Find anomalies in all consumptions for the client and prepare for bulk update
        consumptions_to_update.extend(find_anomalies(client, list(reversed(queryset)), threshold=0.5))

    Client.objects.bulk_update(clients_to_update, ['has_elec_heating'])
    Consumption.objects.bulk_update(consumptions_to_update, ['has_anomaly'])


class Migration(migrations.Migration):
    dependencies = [
        ("dashboard", "0002_client_has_elec_heating_consumption_has_anomaly"),
    ]

    operations = [
        migrations.RunPython(fill_electric_heating_and_anomaly),
    ]
